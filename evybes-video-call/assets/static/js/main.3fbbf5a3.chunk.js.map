{"version":3,"sources":["components/Signin.js","components/VideoChat.js","App.js","reportWebVitals.js","index.js"],"names":["Singin","setToken","setName","setRoom","name","room","event","a","preventDefault","axios","post","identity","result","console","log","data","onSubmit","htmlFor","type","id","value","onChange","e","target","VideoChat","token","localVideoRef","useRef","remoteVideoRef","appendNewParticipant","track","chat","document","createElement","setAttribute","appendChild","attach","current","useEffect","TwilioVideo","connect","video","audio","then","addParticipant","participant","tracks","forEach","publication","isSubscribed","on","createLocalVideoTrack","participants","elementId","getElementById","parentNode","removeChild","catch","err","style","textAlign","alignItems","display","flexDirection","ref","App","useState","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3fbbf5a3.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\nexport function Singin ({setToken, setName, setRoom, name, room})\n{\n\n    \n    async function handleSubmit(event){\n        event.preventDefault();\n\n        const result = await axios.post( \"https://evybes-video-call-5486-dev.twil.io/video-token\",\n            {\n                identity: name,\n                room: room\n            } )\n        \n        \n        console.log(\"result token: \", result.data)\n        setToken(result.data)\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">\n                Name\n                 <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)}></input>\n            </label><br />\n             <label htmlFor=\"name\">\n                Room\n                 <input type=\"text\" id=\"room\" value={room} onChange={(e) => setRoom(e.target.value)}></input>\n            </label><br />\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}","import React,{useEffect,useRef} from 'react'\nimport TwilioVideo from 'twilio-video'\n\n\nexport function VideoChat ( {token, room } )\n{\n    const localVideoRef = useRef()\n    const remoteVideoRef = useRef()\n\n   function appendNewParticipant(track, identity) {\n    const chat = document.createElement('div');\n    chat.setAttribute('id', identity);\n    chat.appendChild(track.attach());\n    remoteVideoRef.current.appendChild(chat);\n  }\n\n    function removeParticipant(participant){\n        const elementId = document.getElementsById( participant.identity )\n        elementId.parentNode.removeChild(elementId)\n    }\n\n    useEffect(() =>\n    {\n        //effect \n        TwilioVideo.connect( token,{\n            video: true,\n            audio: true,\n            name: room \n        } ).then( ( room ) =>\n        {\n            TwilioVideo.createLocalVideoTrack().then((track ) => {\n                    localVideoRef.current.appendChild(track.attach());\n            } );\n            \n            function removeParticipant(participant) {\n                    const elementId = document.getElementById(participant.identity);\n                    elementId.parentNode.removeChild(elementId);\n            }\n            \n            function addParticipant (participant){\n                participant.tracks.forEach((publication) => {\n                    if (publication.isSubscribed){\n                        const track = publication.track;\n                        appendNewParticipant(track, participant.identity);\n                    }\n                } )\n                participant.on('trackSubscribed',(track) =>{\n                    appendNewParticipant(track, participant.identity);\n                })\n            }\n            room.participants.forEach(addParticipant);\n            room.on('participantConnected', addParticipant)\n            room.on('participantDisconnected', removeParticipant)\n        } ).catch( (err) => console.log(\"Error Messge: \", err) )\n        //clean up function\n        // return () => {}\n        \n    }, [token, room])\n    return (\n        <div style={{textAlign: \"center\", alignItems: \"center\", display: \"flex\", flexDirection:\"column\"}}>\n            <div>\n              <h3>You are inside the room name: {room}</h3>\n            </div>\n            <div ref={localVideoRef} ></div>\n            <div ref={remoteVideoRef}></div>\n        </div>\n    )\n}","import { useState } from 'react'\nimport './App.css';\nimport {Singin} from \"./components/Signin\"\nimport {VideoChat} from \"./components/VideoChat\"\n\nfunction App ()\n{\n   const [name,setName] = useState(\"\")\n    const [room,setRoom] = useState( \"room\" )\n  const [token, setToken] = useState()\n  return (\n    <div className=\"App\">\n      {\n        !token ?\n          <div>\n            <h1>Hello Video Chat App</h1>\n            Show From\n            <Singin setToken={setToken} setName={setName} setRoom={setRoom} name={name} room={room}/>\n          </div> :\n          <VideoChat token={token} room={room}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}